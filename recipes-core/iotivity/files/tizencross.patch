diff --git a/build_common/tizen/SConscript b/build_common/tizen/SConscript
index cc3b535..2ece77f 100644
--- a/build_common/tizen/SConscript
+++ b/build_common/tizen/SConscript
@@ -2,6 +2,8 @@
 # This script set linux specific flags (GNU GCC)
 #
 ##
+import os
+import platform
 Import('env')
 
 print "Reading linux configuration script"
@@ -18,14 +20,21 @@ if env.get('LOGGING'):
 
 env.AppendUnique(CPPDEFINES = ['WITH_POSIX', '__linux__'])
 env.AppendUnique(CFLAGS = ['-std=gnu99'])
-env.AppendUnique(CCFLAGS = ['-Wall', '-fPIC'])
+env.AppendUnique(CCFLAGS = ['-Wall', '-Wextra', '-fPIC'])
 env.AppendUnique(LINKFLAGS = ['-ldl', '-lpthread'])
 
 if env.get('TARGET_OS') == 'tizen':
     env.AppendUnique(CCFLAGS = ['-D__TIZEN__', '-DSLP_SDK_LOG', '-D_GNU_SOURCE', '-DTIZEN_DEBUG_ENABLE'])
-    env.ParseConfig("pkg-config dlog --cflags --libs")
+    # in case of a cross build, we have to point pkg-config to the sysroot
+    cmd = ""
+    for key in ('PKG_CONFIG_SYSROOT_DIR', 'PKG_CONFIG_PATH', 'PKG_CONFIG_DIR', 'PKG_CONFIG_LIBDIR', 'PKG_CONFIG_DISABLE_UNINSTALLED'):
+        if key in os.environ:
+	    cmd += "%s=%s " % (key, os.environ[key])
+    #cmd += "pkg-config dlog --cflags --libs"
+    # if we're going to build all from the top level, look for more stuff:
+    cmd += "pkg-config --cflags --libs dlog glib-2.0 capi-network-wifi capi-network-bluetooth"
+    env.ParseConfig(cmd)
 
-# Set arch flags
 target_arch = env.get('TARGET_ARCH')
 if target_arch in ['x86']:
 	env.AppendUnique(CCFLAGS = ['-m32'])
@@ -42,5 +51,40 @@ elif target_arch.find('v7a') > 0:
 	env.AppendUnique(CPPFLAGS = ['-march=armv7-a'])
 elif target_arch.find('arm64') >= 0:
 	env.AppendUnique(CPPFLAGS = ['-march=armv8-a'])
+elif target_arch in ['arm']:
+	# if cross-building, fish out a bunch of environment values we need
+	# and set them in the construction environment
+	if not target_arch == platform.machine():
+	    env['ENV']['PATH'] = os.environ['PATH']
+	    env.Replace(CC = os.environ['CC'])
+	    env.Replace(CXX = os.environ['CXX'])
+	    env.Replace(STRIP = os.environ['STRIP'])
+	    env.Replace(RANLIB = os.environ['RANLIB'])
+	    env.Replace(AS = os.environ['AS'])
+	    env.Replace(AR = os.environ['AR'])
+	    env.Replace(LD = os.environ['LD'])
+	else:
+	    env.AppendUnique(CPPFLAGS = ['-march=armv7-a'])
+	    env.AppendUnique(CPPFLAGS = ['-mtune=cortex-a7'])
+	    env.AppendUnique(CPPFLAGS = ['-mfpu=neon-vfpv4'])
+	    env.AppendUnique(CPPFLAGS = ['-mfloat-abi=hard'])
+	    env.AppendUnique(CCFLAGS = ['-mfloat-abi=hard'])
+	    env.AppendUnique(LINKFLAGS = ['-mfloat-abi=hard'])
 else:
 	env.AppendUnique(CPPFLAGS = ['-march=armv5te'])
+
+
+
+#XXX debugging the environment:
+#print env.Dump()
+dict = env.Dictionary()
+for key in ('CC', 'CXX', 'CPP', 'LD', 'LINK', 'SMARTLINK', 'CFLAGS', 'CCFLAGS', 'CPPFLAGS', 'LDFLAGS', 'LINKFLAGS','CCCOM','CXXCOM','LINKCOM','LDMODULE','LDMODULECOM','SHLINK','PATH','STRIP','RANLIB','AS','AR'):
+    if key in dict:
+        print "DEBUG: scons   %s=%s" % (key, dict[key])
+    if key in os.environ:
+        print "DEBUG: environ %s=%s" % (key, os.environ[key])
+print "DEBUG: expanded CCCOM  is", env.subst('$CCCOM')
+print "DEBUG: expanded CXXCOM is", env.subst('$CXXCOM')
+print "DEBUG: expanded LINKCOM is", env.subst('$LINKCOM')
+print "DEBUG: expanded LDMODULECOM is", env.subst('$LDMODULECOM')
+
diff --git a/resource/csdk/SConscript b/resource/csdk/SConscript
index cee8dc9..55c3328 100644
--- a/resource/csdk/SConscript
+++ b/resource/csdk/SConscript
@@ -21,6 +21,7 @@
 ##
 # liboctbstack (share library) build script
 ##
+import os
 Import('env')
 
 lib_env = env.Clone()
@@ -73,7 +74,12 @@ if target_os in ['android', 'linux','tizen']:
 liboctbstack_env.AppendUnique(LIBS = ['coap', 'm'])
 
 if target_os == 'tizen':
-    liboctbstack_env.ParseConfig("pkg-config --cflags --libs uuid")
+    cmd = ""
+    for key in ('PKG_CONFIG_SYSROOT_DIR', 'PKG_CONFIG_PATH', 'PKG_CONFIG_DIR', 'PKG_CONFIG_LIBDIR', 'PKG_CONFIG_DISABLE_UNINSTALLED'):
+        if key in os.environ:
+	    cmd += "%s=%s " % (key, os.environ[key])
+    cmd += "pkg-config --cflags --libs uuid"
+    liboctbstack_env.ParseConfig(cmd)
 
 if target_os not in ['android', 'arduino', 'windows', 'winrt']:
 	liboctbstack_env.AppendUnique(LIBS = ['pthread'])
diff --git a/resource/csdk/connectivity/build/tizen/scons/SConscript b/resource/csdk/connectivity/build/tizen/scons/SConscript
index 9a9644d..34d62b6 100644
--- a/resource/csdk/connectivity/build/tizen/scons/SConscript
+++ b/resource/csdk/connectivity/build/tizen/scons/SConscript
@@ -3,6 +3,7 @@
 #
 ##
 
+import os
 Import('env')
 
 target_os = env.get('TARGET_OS')
@@ -18,7 +19,15 @@ else:
 if env.get('LOGGING'):
 	env.AppendUnique(CPPDEFINES = ['-DTB_LOG'])
 
-env.ParseConfig("pkg-config --cflags --libs capi-network-wifi dlog glib-2.0")
+cmd = ""
+for key in ('PKG_CONFIG_SYSROOT_DIR', 'PKG_CONFIG_PATH', 'PKG_CONFIG_DIR', 'PKG_CONFIG_LIBDIR', 'PKG_CONFIG_DISABLE_UNINSTALLED'):
+    if key in os.environ:
+	cmd += "%s=%s " % (key, os.environ[key])
+cmd += "pkg-config --cflags --libs capi-network-wifi dlog glib-2.0"
+env.ParseConfig(cmd)
+print "CSDK DEBUG:"
+print env.Dump(None)
+
 if 'ALL' in transport:
 		env.AppendUnique(CPPDEFINES = ['WIFI_ADAPTER', 'NO_ETHERNET_ADAPTER','EDR_ADAPTER','LE_ADAPTER'])
 		print "CA Transport is ALL"
diff --git a/resource/csdk/connectivity/src/bt_edr_adapter/tizen/SConscript b/resource/csdk/connectivity/src/bt_edr_adapter/tizen/SConscript
index cb7c711..935356b 100644
--- a/resource/csdk/connectivity/src/bt_edr_adapter/tizen/SConscript
+++ b/resource/csdk/connectivity/src/bt_edr_adapter/tizen/SConscript
@@ -3,13 +3,18 @@
 #######################################################
 
 Import('env', 'src_dir')
-import os.path
+import os
 
 env.PrependUnique(CPPPATH = [ os.path.join(src_dir, 'tizen'),
                               './con/lib/tizen/ble/inc',
                               './con/lib/tizen/ble/inc/mobile' ])
 
-env.ParseConfig("pkg-config --cflags --libs capi-network-bluetooth")
+cmd = ""
+for key in ('PKG_CONFIG_SYSROOT_DIR', 'PKG_CONFIG_PATH', 'PKG_CONFIG_DIR', 'PKG_CONFIG_LIBDIR', 'PKG_CONFIG_DISABLE_UNINSTALLED'):
+    if key in os.environ:
+	cmd += "%s=%s " % (key, os.environ[key])
+cmd += "pkg-config --cflags --libs capi-network-bluetooth"
+env.ParseConfig(cmd)
 
 src_files = [ 'caedrclient.c',
               'caedrdevicelist.c',
diff --git a/resource/csdk/connectivity/src/bt_le_adapter/tizen/SConscript b/resource/csdk/connectivity/src/bt_le_adapter/tizen/SConscript
index 6ca670e..074dbdb 100644
--- a/resource/csdk/connectivity/src/bt_le_adapter/tizen/SConscript
+++ b/resource/csdk/connectivity/src/bt_le_adapter/tizen/SConscript
@@ -3,14 +3,19 @@
 #######################################################
 
 Import('env', 'src_dir')
-import os.path
+import os
 
 root_dir = os.pardir
 env.PrependUnique(CPPPATH = [ os.path.join(src_dir, 'tizen'),
                               os.path.join(root_dir, 'lib/tizen/ble/inc'),
                               os.path.join(root_dir, 'lib/tizen/ble/inc/mobile')])
 
-env.ParseConfig("pkg-config --cflags --libs capi-network-bluetooth")
+cmd = ""
+for key in ('PKG_CONFIG_SYSROOT_DIR', 'PKG_CONFIG_PATH', 'PKG_CONFIG_DIR', 'PKG_CONFIG_LIBDIR', 'PKG_CONFIG_DISABLE_UNINSTALLED'):
+    if key in os.environ:
+	cmd += "%s=%s " % (key, os.environ[key])
+cmd += "pkg-config --cflags --libs capi-network-bluetooth"
+env.ParseConfig(cmd)
 
 src_files = [ 'cableclient.c',
               'cableserver.c',
diff --git a/resource/csdk/connectivity/src/ip_adapter/tizen/SConscript b/resource/csdk/connectivity/src/ip_adapter/tizen/SConscript
index 249d73c..2a3cdde 100644
--- a/resource/csdk/connectivity/src/ip_adapter/tizen/SConscript
+++ b/resource/csdk/connectivity/src/ip_adapter/tizen/SConscript
@@ -3,9 +3,14 @@
 #######################################################
 
 Import('env', 'src_dir')
-import os.path
+import os
 
-env.ParseConfig("pkg-config --cflags --libs capi-network-wifi")
+cmd = ""
+for key in ('PKG_CONFIG_SYSROOT_DIR', 'PKG_CONFIG_PATH', 'PKG_CONFIG_DIR', 'PKG_CONFIG_LIBDIR', 'PKG_CONFIG_DISABLE_UNINSTALLED'):
+    if key in os.environ:
+	cmd += "%s=%s " % (key, os.environ[key])
+cmd += "pkg-config --cflags --libs capi-network-wifi"
+env.ParseConfig(cmd)
 
 src_files = [ 'caipnwmonitor.c' ]
 
diff --git a/resource/csdk/security/provisioning/SConscript b/resource/csdk/security/provisioning/SConscript
index d5cc915..604897a 100644
--- a/resource/csdk/security/provisioning/SConscript
+++ b/resource/csdk/security/provisioning/SConscript
@@ -19,6 +19,7 @@
 # //-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 #
 
+import os
 Import('env')
 
 provisioning_env = env.Clone()
@@ -62,7 +63,12 @@ provisioning_env.PrependUnique(LIBS = ['oc', 'octbstack', 'oc_logger', 'connecti
 
 provisioning_env.AppendUnique(LIBS = ['tinydtls'])
 
-provisioning_env.ParseConfig('pkg-config --libs glib-2.0');
+cmd = ""
+for key in ('PKG_CONFIG_SYSROOT_DIR', 'PKG_CONFIG_PATH', 'PKG_CONFIG_DIR', 'PKG_CONFIG_LIBDIR', 'PKG_CONFIG_DISABLE_UNINSTALLED'):
+    if key in os.environ:
+	cmd += "%s=%s " % (key, os.environ[key])
+cmd += "pkg-config --libs glib-2.0"
+provisioning_env.ParseConfig(cmd)
 
 if target_os == 'android':
 	provisioning_env.AppendUnique(CXXFLAGS = ['-frtti', '-fexceptions'])
diff --git a/resource/csdk/security/provisioning/sample/SConscript b/resource/csdk/security/provisioning/sample/SConscript
index 1947307..4a3c9be 100755
--- a/resource/csdk/security/provisioning/sample/SConscript
+++ b/resource/csdk/security/provisioning/sample/SConscript
@@ -19,6 +19,7 @@
 # //-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 #
 
+import os
 Import('env')
 
 provisioning_env = env.Clone()
@@ -53,7 +54,13 @@ provisioning_env.PrependUnique(LIBS = ['ocspapi','oc', 'oc_logger', 'ocsrm','m',
 
 if env.get('SECURED') == '1':
     provisioning_env.AppendUnique(LIBS = ['tinydtls'])
-provisioning_env.ParseConfig('pkg-config --libs glib-2.0');
+
+cmd = ""
+for key in ('PKG_CONFIG_SYSROOT_DIR', 'PKG_CONFIG_PATH', 'PKG_CONFIG_DIR', 'PKG_CONFIG_LIBDIR', 'PKG_CONFIG_DISABLE_UNINSTALLED'):
+    if key in os.environ:
+	cmd += "%s=%s " % (key, os.environ[key])
+cmd += "pkg-config --libs glib-2.0"
+provisioning_env.ParseConfig(cmd)
 
 provisioning_env.AppendUnique(CPPDEFINES = ['TB_LOG'])
 
diff --git a/service/protocol-plugin/plugin-manager/SConscript b/service/protocol-plugin/plugin-manager/SConscript
index 25edfce..b9ff341 100644
--- a/service/protocol-plugin/plugin-manager/SConscript
+++ b/service/protocol-plugin/plugin-manager/SConscript
@@ -20,7 +20,12 @@ plugin_manager_env.AppendUnique(CPPPATH = [
 		])
 
 if target_os == 'tizen':
-    plugin_manager_env.ParseConfig("pkg-config --cflags --libs capi-appfw-app-common")
+    cmd = ""
+    for key in ('PKG_CONFIG_SYSROOT_DIR', 'PKG_CONFIG_PATH', 'PKG_CONFIG_DIR', 'PKG_CONFIG_LIBDIR', 'PKG_CONFIG_DISABLE_UNINSTALLED'):
+        if key in os.environ:
+	    cmd += "%s=%s " % (key, os.environ[key])
+    cmd += "pkg-config --cflags --libs capi-appfw-application"
+    plugin_manager_env.ParseConfig(cmd)
 
 if target_os not in ['windows', 'winrt']:
 	plugin_manager_env.AppendUnique(CXXFLAGS = ['-Wall','-std=c++0x',
diff --git a/service/protocol-plugin/plugin-manager/src/Config.cpp b/service/protocol-plugin/plugin-manager/src/Config.cpp
index 4553e2e..ddb20ad 100644
--- a/service/protocol-plugin/plugin-manager/src/Config.cpp
+++ b/service/protocol-plugin/plugin-manager/src/Config.cpp
@@ -26,7 +26,8 @@
 #include "Config.h"
 
 #ifdef __TIZEN__
-#include <appfw/app_common.h>
+/*XXX #include <appfw/app_common.h>	OLD PKG, use following instead: */
+#include <appfw/app.h>
 #endif
 
 using namespace OIC;
diff --git a/service/protocol-plugin/plugin-manager/src/PluginManager.cpp b/service/protocol-plugin/plugin-manager/src/PluginManager.cpp
index 16a861b..0168dd1 100644
--- a/service/protocol-plugin/plugin-manager/src/PluginManager.cpp
+++ b/service/protocol-plugin/plugin-manager/src/PluginManager.cpp
@@ -25,7 +25,8 @@
 
 #include "PluginManager.h"
 #ifdef __TIZEN__
-#include <appfw/app_common.h>
+/*XXX #include <appfw/app_common.h>	OLD PKG, use following instead: */
+#include <appfw/app.h>
 #endif
 
 using namespace OIC;
